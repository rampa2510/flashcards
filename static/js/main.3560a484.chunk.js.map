{"version":3,"sources":["Screens/Signin.js","Component/Navbar.js","Screens/FlashCards.js","App.js","reportWebVitals.js","index.js"],"names":["CardContainer","styled","div","Container","AlertContainer","TitleContainer","IconContainer","TextInp","TextField","ButtonContainer","Signup","props","React","useState","isAlertVisible","setAlertStatus","window","innerWidth","windowWidth","setWindowWidth","handleSubmit","useCallback","a","history","push","e","console","error","useEffect","addEventListener","removeEventListener","width","height","text","color","rounded","id","autofocus","placeholder","type","onClick","closable","border","visible","icon","onClose","memo","StyledNav","Navbar","FlashCards","App","path","exact","component","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"82CAOA,IAAMA,EAAgBC,IAAOC,IAAV,KAObC,EAAYF,IAAOC,IAAV,KAQTE,EAAiBH,IAAOC,IAAV,KAQdG,EAAiBJ,IAAOC,IAAV,KASdI,EAAgBL,IAAOC,IAAV,KAQbK,EAAUN,YAAOO,IAAPP,CAAH,KAIPQ,EAAkBR,IAAOC,IAAV,KAIfQ,EAAS,SAACC,GAAW,IAAD,EACiBC,IAAMC,UAAS,GADhC,mBACjBC,EADiB,KACDC,EADC,OAEcH,IAAMC,SAASG,OAAOC,YAFpC,mBAEjBC,EAFiB,KAEJC,EAFI,KAGlBC,EAAeR,IAAMS,YAAN,sBAAkB,sBAAAC,EAAA,sDACrC,IAMEX,EAAMY,QAAQC,KAAK,oBACnB,MAAOC,GACPC,QAAQC,MAAMF,GATqB,2CAWpC,CAACd,EAAMY,UAUV,OARAX,IAAMgB,WAAU,WAEd,OADAZ,OAAOa,iBAAiB,UAAU,kBAAMV,EAAeH,OAAOC,eACvD,kBACLD,OAAOc,oBAAoB,UAAU,kBACnCX,EAAeH,OAAOC,kBAEzB,IAGD,qCACE,cAACd,EAAD,UACE,cAAC,IAAD,CAAM4B,MAAOb,EAAc,IAAM,IAAM,IAAKc,OAAQ,IAApD,SACE,eAAChC,EAAD,WACE,cAACM,EAAD,UACE,cAAC,IAAD,CAAY2B,MAAM,EAAOC,MAAM,eAAeC,SAAS,EAAvD,SACE,cAAC,IAAD,QAGJ,cAAC9B,EAAD,sBACA,cAACE,EAAD,CACEwB,MAAOb,EAAc,IAAM,IAAM,IACjCkB,GAAG,OACHC,WAAW,EACXC,YAAY,mBAEd,cAAC/B,EAAD,CACEgC,KAAK,WACLR,MAAOb,EAAc,IAAM,IAAM,IACjCkB,GAAG,OACHE,YAAY,mBAGd,cAAC7B,EAAD,UACE,cAAC,IAAD,CAAQ+B,QAASpB,EAAjB,8BAMR,cAAChB,EAAD,UACE,cAAC,IAAD,CACE+B,SAAO,EACPM,UAAQ,EACRV,MAAO,MACPQ,KAAK,QACLG,OAAO,OACPC,QAAS7B,EACT8B,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAM9B,GAAe,IARhC,qCAiBO+B,iBAAKpC,G,6MC5HpB,IAAMqC,EAAY9C,IAAOC,IAAV,KAST8C,EAAS,WACb,OACE,cAAC,IAAD,UACE,cAACD,EAAD,UACE,iDAMOD,iBAAKE,GCpBdC,EAAa,WACjB,OAAO,cAAC,EAAD,KAGMH,iBAAKG,GCKLC,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,mBAAmBC,OAAK,EAACC,UAAWJ,Q,QCKvCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,cAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.3560a484.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { Card, TextField, Button, IconButton, Alert } from \"ui-neumorphism\";\nimport LockIcon from \"mdi-react/LockIcon\";\nimport AlertIcon from \"mdi-react/AlertIcon\";\nimport Interceptor from \"../Helpers/interceptor\";\nimport styled from \"styled-components\";\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n`;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 40px;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst AlertContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding-top: 50px;\n  align-items: center;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  font-size: 25px;\n  width: 100%;\n  justify-content: center;\n  font-weight: 500;\n  padding: 10px 0 20px 0;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0px 10px 0px;\n`;\n\nconst TextInp = styled(TextField)`\n  padding: 10px 0 10px 0;\n`;\n\nconst ButtonContainer = styled.div`\n  padding-top: 20px;\n`;\n\nconst Signup = (props) => {\n  const [isAlertVisible, setAlertStatus] = React.useState(false);\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n  const handleSubmit = React.useCallback(async () => {\n    try {\n      /*      const username = document.getElementById(\"user\").value;\n      const password = document.getElementById(\"pass\").value;\n      console.log(username, password);\n      const data = await Interceptor(\"\", \"POST\", { username, password });\n      if (data[0] === 400) return setAlertStatus(true); */\n      props.history.push(\"/show-flashcards\");\n    } catch (e) {\n      console.error(e);\n    }\n  }, [props.history]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\n    return () =>\n      window.removeEventListener(\"resize\", () =>\n        setWindowWidth(window.innerWidth)\n      );\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Card width={windowWidth > 415 ? 400 : 300} height={400}>\n          <CardContainer>\n            <IconContainer>\n              <IconButton text={false} color=\"var(--error)\" rounded={true}>\n                <LockIcon />\n              </IconButton>\n            </IconContainer>\n            <TitleContainer>Sign In</TitleContainer>\n            <TextInp\n              width={windowWidth > 415 ? 300 : 200}\n              id=\"user\"\n              autofocus={true}\n              placeholder=\"Enter username\"\n            />\n            <TextInp\n              type=\"password\"\n              width={windowWidth > 415 ? 300 : 200}\n              id=\"pass\"\n              placeholder=\"Enter password\"\n            />\n\n            <ButtonContainer>\n              <Button onClick={handleSubmit}>Sign In</Button>\n            </ButtonContainer>\n          </CardContainer>\n        </Card>\n      </Container>\n\n      <AlertContainer>\n        <Alert\n          rounded\n          closable\n          width={\"20%\"}\n          type=\"error\"\n          border=\"left\"\n          visible={isAlertVisible}\n          icon={<AlertIcon />}\n          onClose={() => setAlertStatus(false)}\n        >\n          Wrong Credentials\n        </Alert>\n      </AlertContainer>\n    </>\n  );\n};\n\nexport default memo(Signup);\n","import React, { memo } from \"react\";\nimport { Card } from \"ui-neumorphism\";\nimport styled from \"styled-components\";\n\nconst StyledNav = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  font-family: Roboto;\n  font-weight: 500;\n  padding: 10px 0 10px 0;\n`;\n\nconst Navbar = () => {\n  return (\n    <Card>\n      <StyledNav>\n        <h4>Flashcards</h4>\n      </StyledNav>\n    </Card>\n  );\n};\n\nexport default memo(Navbar);\n","import React, { memo } from \"react\";\nimport Navbar from \"../Component/Navbar\";\n\nconst FlashCards = () => {\n  return <Navbar />;\n};\n\nexport default memo(FlashCards);\n","import { Switch, Route } from \"react-router-dom\";\nimport SignIn from \"./Screens/Signin\";\nimport FlashCards from \"./Screens/FlashCards\";\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={SignIn} />\n      <Route path=\"/show-flashcards\" exact component={FlashCards} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"ui-neumorphism/dist/index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}