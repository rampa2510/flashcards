{"version":3,"sources":["Helpers/interceptor.js","Screens/Signin.js","Component/Navbar.js","Screens/FlashCards.js","App.js","reportWebVitals.js","index.js"],"names":["Interceptor","endpoint","a","method","body","contentType","hostName","JSON","stringify","reqOptions","headers","Object","keys","length","toLowerCase","fetch","then","res","status","json","resp","response","console","error","message","CardContainer","styled","div","Container","AlertContainer","TitleContainer","IconContainer","TextInp","TextField","ButtonContainer","Signup","props","React","useState","isAlertVisible","setAlertStatus","window","innerWidth","windowWidth","setWindowWidth","handleSubmit","useCallback","username","document","getElementById","value","password","log","history","push","useEffect","addEventListener","removeEventListener","width","height","text","color","rounded","id","autofocus","placeholder","type","onClick","closable","border","visible","icon","onClose","memo","StyledNav","Navbar","FlashCards","App","path","process","exact","component","SignIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.b4a3cb88.chunk.js","sourcesContent":["export default async function Interceptor(\n  endpoint,\n  method = \"GET\",\n  body = {},\n  contentType = \"application/json\"\n) {\n  const hostName = \"http://localhost:4000\";\n\n  body = contentType === \"application/json\" ? JSON.stringify(body) : body;\n\n  let reqOptions = {\n    method,\n    headers: {\n      \"Content-Type\": contentType,\n    },\n    body,\n  };\n\n  // delete user Auth header if userData is not present\n\n  // delete data body if body is not supplied\n  if (contentType !== \"application/json\") {\n    delete reqOptions.headers[\"Content-Type\"];\n  }\n\n  if (\n    (!Object.keys(body).length && contentType === \"application/json\") ||\n    method.toLowerCase() === \"get\"\n  ) {\n    delete reqOptions.body;\n  }\n\n  // console.log(reqOptions)\n  try {\n    const response = await fetch(`${hostName}/${endpoint}`, reqOptions).then(\n      async (res) => {\n        let status = res.status;\n        let resp = await res.json();\n        return [status, resp];\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n    return [\n      500,\n      {\n        message: \"We are experincing issues please contact the technical team\",\n      },\n    ];\n  }\n}\n","import React, { memo } from \"react\";\nimport { Card, TextField, Button, IconButton, Alert } from \"ui-neumorphism\";\nimport LockIcon from \"mdi-react/LockIcon\";\nimport AlertIcon from \"mdi-react/AlertIcon\";\nimport Interceptor from \"../Helpers/interceptor\";\nimport styled from \"styled-components\";\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n`;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 40px;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst AlertContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding-top: 50px;\n  align-items: center;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  font-size: 25px;\n  width: 100%;\n  justify-content: center;\n  font-weight: 500;\n  padding: 10px 0 20px 0;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0px 10px 0px;\n`;\n\nconst TextInp = styled(TextField)`\n  padding: 10px 0 10px 0;\n`;\n\nconst ButtonContainer = styled.div`\n  padding-top: 20px;\n`;\n\nconst Signup = (props) => {\n  const [isAlertVisible, setAlertStatus] = React.useState(false);\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n  const handleSubmit = React.useCallback(async () => {\n    try {\n      const username = document.getElementById(\"user\").value;\n      const password = document.getElementById(\"pass\").value;\n      console.log(username, password);\n      const data = await Interceptor(\"\", \"POST\", { username, password });\n      if (data[0] === 400) return setAlertStatus(true);\n      props.history.push(\"/flashcards\");\n    } catch (e) {\n      console.error(e);\n    }\n  }, [props.history]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\n    return () =>\n      window.removeEventListener(\"resize\", () =>\n        setWindowWidth(window.innerWidth)\n      );\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Card width={windowWidth > 415 ? 400 : 300} height={400}>\n          <CardContainer>\n            <IconContainer>\n              <IconButton text={false} color=\"var(--error)\" rounded={true}>\n                <LockIcon />\n              </IconButton>\n            </IconContainer>\n            <TitleContainer>Sign In</TitleContainer>\n            <TextInp\n              width={windowWidth > 415 ? 300 : 200}\n              id=\"user\"\n              autofocus={true}\n              placeholder=\"Enter username\"\n            />\n            <TextInp\n              type=\"password\"\n              width={windowWidth > 415 ? 300 : 200}\n              id=\"pass\"\n              placeholder=\"Enter password\"\n            />\n\n            <ButtonContainer>\n              <Button onClick={handleSubmit}>Sign In</Button>\n            </ButtonContainer>\n          </CardContainer>\n        </Card>\n      </Container>\n\n      <AlertContainer>\n        <Alert\n          rounded\n          closable\n          width={\"20%\"}\n          type=\"error\"\n          border=\"left\"\n          visible={isAlertVisible}\n          icon={<AlertIcon />}\n          onClose={() => setAlertStatus(false)}\n        >\n          Wrong Credentials\n        </Alert>\n      </AlertContainer>\n    </>\n  );\n};\n\nexport default memo(Signup);\n","import React, { memo } from \"react\";\nimport { Card } from \"ui-neumorphism\";\nimport styled from \"styled-components\";\n\nconst StyledNav = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  font-family: Roboto;\n  font-weight: 500;\n  padding: 10px 0 10px 0;\n`;\n\nconst Navbar = () => {\n  return (\n    <Card>\n      <StyledNav>\n        <h4>Flashcards</h4>\n      </StyledNav>\n    </Card>\n  );\n};\n\nexport default memo(Navbar);\n","import React, { memo } from \"react\";\nimport Navbar from \"../Component/Navbar\";\n\nconst FlashCards = () => {\n  return <Navbar />;\n};\n\nexport default memo(FlashCards);\n","import { Switch, Route } from \"react-router-dom\";\nimport SignIn from \"./Screens/Signin\";\nimport FlashCards from \"./Screens/FlashCards\";\nfunction App() {\n  return (\n    <Switch>\n      <Route path={process.env.PUBLIC_URL + \"/\"} exact component={SignIn} />\n      <Route\n        path={process.env.PUBLIC_URL + \"/show-flashcards\"}\n        exact\n        component={FlashCards}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"ui-neumorphism/dist/index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}